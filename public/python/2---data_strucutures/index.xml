<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Data_strucutures :: Second Brain - Cheat Sheets and other utilites</title>
    <link>http://localhost:1313/python/2---data_strucutures/index.html</link>
    <description>Lists - &#34;[ ]&#34; A list is a mutable collection which is ordered and changeable. Allows duplicate members. It can store items of different data types.&#xA;fruits = [&#34;apple&#34;, &#34;banana&#34;, &#34;cherry&#34;] print(fruits[0]) # First element: Output: apple print(fruits[-1]) # Last element: Output: cherry fruits.append(&#34;orange&#34;) # Adds orange to the end of the list print(fruits) # Output: [&#39;apple&#39;, &#39;banana&#39;, &#39;cherry&#39;, &#39;orange&#39;] fruits.remove(&#34;banana&#34;) # Removes banana from the list print(fruits) # Output: [&#39;apple&#39;, &#39;cherry&#39;, &#39;orange&#39;] fruits.insert(1, &#34;kiwi&#34;) # Inserts kiwi at index 1 print(fruits) # Output: [&#39;apple&#39;, &#39;kiwi&#39;, &#39;cherry&#39;, &#39;orange&#39;] fruit[0]=&#34;mango&#34; # Changes the first element to mango print(fruits) # Output: [&#39;mango&#39;, &#39;kiwi&#39;, &#39;cherry&#39;, &#39;orange&#39;] popped = fruits.pop() # Removes the last element (or you can specify an index) # The removed element can be stored in a variable print(fruits) # Output: [&#39;mango&#39;, &#39;kiwi&#39;, &#39;cherry&#39;] print(popped) # Output: orange fruits.sort() # Sorts the list in ascending order print(fruits) # Output: [&#39;cherry&#39;, &#39;kiwi&#39;, &#39;mango&#39;] fruits.reverse() # Reverses the order of the list print(fruits) # Output: [&#39;mango&#39;, &#39;kiwi&#39;, &#39;cherry&#39;] fruits.append(&#34;kiwi&#34;) # Adds another kiwi to the end of the list print(fruits.count(&#34;kiwi&#34;)) # Counts occurrences of kiwi: Output: 2 fruits.remove(&#34;kiwi&#34;) # Removes the first occurrence of kiwi # (you can also use del fruits[1] to remove by index) print(fruits) # Output: [&#39;mango&#39;, &#39;cherry&#39;, &#39;kiwi&#39;] fruits.extend([&#34;grape&#34;, &#34;melon&#34;]) # Adds multiple items to the end of the list print(fruits) # Output: [&#39;mango&#39;, &#39;cherry&#39;, &#39;kiwi&#39;, &#39;grape&#39;, &#39;melon&#39;] You can slice a list (or any other iterable) just like a string:</description>
    <generator>Hugo</generator>
    <language>en-gb</language>
    <lastBuildDate></lastBuildDate>
    <atom:link href="http://localhost:1313/python/2---data_strucutures/index.xml" rel="self" type="application/rss+xml" />
  </channel>
</rss>